{"Name":"Signature Pad for Xamarin and Windows","Id":3715,"Alias":"signature-pad","Description":"Signature Pad makes capturing, saving, exporting, and displaying signatures extremely simple.\r\n\r\nThere are controls for both native apps and Xamarin.Forms apps for most .NET platforms:\r\n\r\n - Xamarin.Android\r\n - Xamarin.iOS\r\n - Windows 10 UWP\r\n - Windows Store 8+\r\n - Windows Phone 8+\r\n\r\n## Using Signature Pad\r\n\r\nSignature Pad has many features that are easy to use.\r\n\r\n_Signature Pad can be used with Xamarin.Forms, however this component does not contain those libraries. In order to use Signature Pad with Xamarin.Forms, you can install the [\"Xamarin.Controls.SignaturePad.Forms\" NuGet](https://www.nuget.org/packages/Xamarin.Controls.SignaturePad.Forms)._\r\n\r\n### Capturing \u0026 Displaying Signatures\r\n\r\nThe Signature Pad control can be added to your app\u0027s view hierarchy using drag-and-drop with the designers or by writing simple code.\r\n\r\nOn iOS:\r\n\r\n```csharp\r\nvar signature = new SignaturePadView () {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = UIColor.Black\r\n};\r\n```\r\n\r\nOn Android:\r\n\r\n```csharp\r\nvar signature = new SignaturePadView (this) {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = Color.Black\r\n};\r\n```\r\n\r\nOn Windows:\r\n\r\n```csharp\r\nvar signature = new SignaturePad () {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = Colors.Black\r\n};\r\n```\r\n\r\n### Exporting Signature Images\r\n\r\nOnce the user has written his/her signature, you can export that signature as a native bitmap.\r\n\r\n```csharp\r\n// iOS\r\nUIImage image = signature.GetImage ();\r\n\r\n// Android\r\nBitmap image = signature.GetImage ();\r\n\r\n// Windows\r\nWriteableBitmap image = signature.GetImage ();\r\n```\r\n\r\n### Exporting Signature Points\r\n\r\nIf you have to save and restore a user\u0027s signature, you can also capture the raw stoke points.\r\n\r\n```csharp\r\n// iOS\r\nCGPoint[] points = signature.Points;\r\nCGPoint[][] strokes = signature.Strokes;\r\n\r\n// Android\r\nPointF[] points = signature.Points;\r\nPointF[][] strokes = signature.Strokes;\r\n\r\n// Windows\r\nPoint[] points = signature.Points;\r\nPoint[][] strokes = signature.Strokes;\r\n```\r\n\r\n### Importing Signature Points\r\n\r\n```csharp\r\nsignature.LoadPoints (points);\r\nsignature.LoadStrokes (strokes);\r\n```\r\n","Version":"2.2.0","Summary":"Makes capturing, saving, and displaying signatures extremely simple.","QuickStart":"Signature Pad makes capturing, saving, exporting, and displaying signatures extremely simple.\r\n\r\nThere are controls for both native apps and Xamarin.Forms apps for most .NET platforms:\r\n\r\n - Xamarin.Android\r\n - Xamarin.iOS\r\n - Windows 10 UWP\r\n - Windows Store 8+\r\n - Windows Phone 8+\r\n\r\n## Using Signature Pad\r\n\r\nSignature Pad has many features that are easy to use.\r\n\r\n_Signature Pad can be used with Xamarin.Forms, however this component does not contain those libraries. In order to use Signature Pad with Xamarin.Forms, you can install the [\"Xamarin.Controls.SignaturePad.Forms\" NuGet](https://www.nuget.org/packages/Xamarin.Controls.SignaturePad.Forms)._\r\n\r\n### Capturing \u0026 Displaying Signatures\r\n\r\nThe Signature Pad control can be added to your app\u0027s view hierarchy using drag-and-drop with the designers or by writing simple code.\r\n\r\nOn iOS:\r\n\r\n```csharp\r\nvar signature = new SignaturePadView () {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = UIColor.Black\r\n};\r\n```\r\n\r\nOn Android:\r\n\r\n```csharp\r\nvar signature = new SignaturePadView (this) {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = Color.Black\r\n};\r\n```\r\n\r\nOn Windows:\r\n\r\n```csharp\r\nvar signature = new SignaturePad () {\r\n\tStrokeWidth = 3f,\r\n\tStrokeColor = Colors.Black\r\n};\r\n```\r\n\r\n### Exporting Signature Images\r\n\r\nOnce the user has written his/her signature, you can export that signature as a native bitmap.\r\n\r\n```csharp\r\n// iOS\r\nUIImage image = signature.GetImage ();\r\n\r\n// Android\r\nBitmap image = signature.GetImage ();\r\n\r\n// Windows\r\nWriteableBitmap image = signature.GetImage ();\r\n```\r\n\r\n### Exporting Signature Points\r\n\r\nIf you have to save and restore a user\u0027s signature, you can also capture the raw stoke points.\r\n\r\n```csharp\r\n// iOS\r\nCGPoint[] points = signature.Points;\r\nCGPoint[][] strokes = signature.Strokes;\r\n\r\n// Android\r\nPointF[] points = signature.Points;\r\nPointF[][] strokes = signature.Strokes;\r\n\r\n// Windows\r\nPoint[] points = signature.Points;\r\nPoint[][] strokes = signature.Strokes;\r\n```\r\n\r\n### Importing Signature Points\r\n\r\n```csharp\r\nsignature.LoadPoints (points);\r\nsignature.LoadStrokes (strokes);\r\n```\r\n\r\n## Using Signature Pad with Xamarin.Forms\r\n\r\nSignature Pad can be used with Xamarin.Forms, however this component does not contain those libraries. In order to use Signature Pad with Xamarin.Forms, you can install the [\"Xamarin.Controls.SignaturePad.Forms\" NuGet](https://www.nuget.org/packages/Xamarin.Controls.SignaturePad.Forms).\r\n\r\nLike with the native controls, you can create the views in code, but you can also use XAML:\r\n\r\n```xml\r\n\u003cContentPage xmlns:sig=\"clr-namespace:SignaturePad.Forms;assembly=SignaturePad.Forms\"\u003e\r\n\t\u003csig:SignaturePadView\r\n\t\tx:Name=\"signature\"\r\n\t\tStrokeWidth=\"3\"\r\n\t\tStrokeColor=\"Black\" /\u003e\r\n\u003c/ContentPage\u003e\r\n```\r\n\r\nOnce you have the control in your app, you can access the signature just like you could with the native controls:\r\n\r\n```csharp\r\n// export the signature bitmap\r\nStream image = await signature.GetImageStreamAsync (SignatureImageFormat.Png);\r\n\r\n// export the raw signature points\r\nPoint[] points = signature.Points.ToArray ();\r\n\r\n// import the signature points\r\nsignature.Points = points;\r\n```\r\n","Hash":"f6efcd27d56a827e1e24fea182c8bd9a","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}